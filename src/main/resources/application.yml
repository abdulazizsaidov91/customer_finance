server:
  port: 8081
  servlet:
    context-path: /customer_finance


spring:
  datasource:
    url: jdbc:postgresql://pg_container:5432/finance_db
    username: admin
    password: iV$8%Omr
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate.connection.isolation: 2 # 2 = READ COMMITTED
      hibernate.default_schema: finance
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: liquibase
  autoconfigure:
    exclude: io.opentelemetry.instrumentation.spring.autoconfigure.instrumentation.annotations.InstrumentationAnnotationsAutoConfiguration

springdoc:
  swagger-ui:
    tagsSorter: "alpha"
    operationsSorter: "alpha"

jwt:
  secret: GVN0GW/NDhnUnFRu9G8a1LhFH8A65nEWRrvNd93I4mc=
  acccess-token-expiration: 1800000
  refresh-token-expiration: 86400000    # Токен живет 1 дней

logging:
  level:
    root: INFO
    com.is.customerfinance.filter.RequestResponseLoggingFilter: DEBUG

otel:
  service:
    name: customer-finance  # Имя сервиса, которое будет видно в Jaeger
  exporter:
    otlp:
      endpoint: http://jaeger:4317  # Адрес Jaeger в Docker
  traces:
    sampler: always_on  # Всегда отправлять трассировки
  experimental:
    annotations:
      enabled: false



